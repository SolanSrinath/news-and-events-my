{"ast":null,"code":"import axios from 'axios';\nimport { CONFIG, LOGIN_URL } from '../utils/constants';\n\nconst hashPass = password => {\n  const salt = bcryptjs.genSaltSync(5);\n  const passHash = bcryptjs.hashSync(password, 0);\n  return passHash;\n};\n\nexport const loginAction = async _ref => {\n  let {\n    username,\n    password,\n    setAuth\n  } = _ref;\n  // const passHash = hashPass(password);\n  const body = JSON.stringify({\n    'username': username,\n    'password': password\n  });\n\n  try {\n    await axios.post(LOGIN_URL, body, CONFIG).then(res => {\n      console.log(res.data);\n    });\n    console.log(\"res : \" + res.data.password); // if (await bcryptjs.compareSync(password, res.data.password)) {\n    // store.dispatch(logIn());\n    // store.dispatch(userConfig({ 'username': username }));\n    // }\n    // else {\n    //     // alert should trigger here\n    // }\n  } catch (err) {\n    console.log(\"error client side \" + err);\n  }\n};","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/components/actions/authAction.js"],"names":["axios","CONFIG","LOGIN_URL","hashPass","password","salt","bcryptjs","genSaltSync","passHash","hashSync","loginAction","username","setAuth","body","JSON","stringify","post","then","res","console","log","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;;AAGA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3B,QAAMC,IAAI,GAAGC,QAAQ,CAACC,WAAT,CAAqB,CAArB,CAAb;AACA,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,QAAT,CAAkBL,QAAlB,EAA4B,CAA5B,CAAjB;AACA,SAAOI,QAAP;AACH,CAJD;;AAMA,OAAO,MAAME,WAAW,GAAG,cAA2C;AAAA,MAApC;AAAEC,IAAAA,QAAF;AAAYP,IAAAA,QAAZ;AAAsBQ,IAAAA;AAAtB,GAAoC;AAClE;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxB,gBAAYJ,QADY;AAExB,gBAAYP;AAFY,GAAf,CAAb;;AAKA,MAAI;AACA,UAAMJ,KAAK,CAACgB,IAAN,CAAWd,SAAX,EAAsBW,IAAtB,EAA4BZ,MAA5B,EACLgB,IADK,CACCC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAHK,CAAN;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,GAAG,CAACG,IAAJ,CAASjB,QAAhC,EALA,CAMA;AACI;AACA;AACJ;AACA;AACA;AAEA;AACH,GAdD,CAcE,OAAOkB,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBE,GAAnC;AACH;AACJ,CAxBM","sourcesContent":["import axios from 'axios';\r\nimport { CONFIG, LOGIN_URL } from '../utils/constants';\r\n\r\n\r\nconst hashPass = (password) => {\r\n    const salt = bcryptjs.genSaltSync(5);\r\n    const passHash = bcryptjs.hashSync(password, 0);\r\n    return passHash;\r\n}\r\n\r\nexport const loginAction = async ({ username, password, setAuth }) => {\r\n    // const passHash = hashPass(password);\r\n    const body = JSON.stringify({\r\n        'username': username,\r\n        'password': password\r\n    });\r\n\r\n    try {\r\n        await axios.post(LOGIN_URL, body, CONFIG)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n        })\r\n        console.log(\"res : \" + res.data.password);\r\n        // if (await bcryptjs.compareSync(password, res.data.password)) {\r\n            // store.dispatch(logIn());\r\n            // store.dispatch(userConfig({ 'username': username }));\r\n        // }\r\n        // else {\r\n        //     // alert should trigger here\r\n            \r\n        // }\r\n    } catch (err) {\r\n        console.log(\"error client side \" + err);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
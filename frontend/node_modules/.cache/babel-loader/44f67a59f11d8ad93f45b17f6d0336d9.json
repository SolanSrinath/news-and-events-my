{"ast":null,"code":"import axios from 'axios';\nimport { NEWS_SELECT_URL, CONFIG } from '../utils/constants';\nexport const getNews = () => {\n  try {\n    const newsTable = axios.post(NEWS_SELECT_URL, CONFIG).then(res => {\n      // console.log('client side news action')\n      // console.log(res.data.row);\n      return res.data.row;\n    });\n    return newsTable;\n  } catch (err) {\n    console.log(\"error client side \" + err);\n  }\n}; // ----------------- Update Row handler -----------------\n\nexport const updateTo = async _ref => {\n  let {\n    inward = null,\n    outward = null,\n    id = null,\n    date = null,\n    inwardNo = null,\n    nature = null,\n    recievedFrom = null,\n    subject = null,\n    deliverTo = null,\n    remark = null,\n    serialNo = null,\n    receiptNo = null,\n    addressee = null,\n    description = null,\n    department = null\n  } = _ref;\n\n  // ----------------- update Inward row -----------------\n  if (inward) {\n    const from_post = \"inward_post\";\n    console.log(id);\n    const body = JSON.stringify({\n      inwardID: id,\n      inwardNo: inwardNo,\n      date: date,\n      from_post: from_post,\n      nature: nature,\n      recievedFrom: recievedFrom,\n      subject: subject,\n      deliverTo: deliverTo,\n      remark: remark\n    });\n\n    try {\n      await axios.post('http://localhost:5000/inward/update', body, CONFIG).then(res => {\n        console.log(res.data);\n        if (res.data.status === SUCCESS) getDisplayData({\n          updated: true\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}; // ----------------- delete handler -----------------\n// export const delete_from = async ({ rowID, inward = false, outward = false }) => {\n//     // only one of two options must be specified.\n//     if (inward && outward) {\n//         // alert function usage error\n//         return;\n//     }\n//     // ----------------- delete inward -----------------\n//     if (inward) {\n//         console.log(rowID)\n//         const body = JSON.stringify({\n//             from: 'inward',\n//             id: rowID\n//         });\n//         try {\n//             console.log(body);\n//             await axios.post('http://localhost:5000/delete', body, CONFIG)\n//                 .then((res) => {\n//                     console.log(res.data);\n//                     if (res.data.status === 'success') {\n//                         console.log('hy im delete in inward !');\n//                         getDisplayData({ updated: true });\n//                     }\n//                 })\n//             // delete successful alert msg.\n//         }\n//         catch (err) {\n//             console.log(err);\n//         }\n//     }\n//     // ----------------- delete outward -----------------\n//     if (outward) {\n//         const body = JSON.stringify({\n//             from: 'outward',\n//             id: rowID\n//         });\n//         try {\n//             console.log(body);\n//             await axios.post('http://localhost:5000/delete', body, CONFIG)\n//                 .then((res) => {\n//                     console.log(res.data);\n//                     if (res.data.status === 'success') getDisplayData({ updated: true });\n//                 })\n//             // delete successful alert msg.\n//         }\n//         catch (err) {\n//             console.log(err);\n//         }\n//     }\n// }","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/actions/newsAction.js"],"names":["axios","NEWS_SELECT_URL","CONFIG","getNews","newsTable","post","then","res","data","row","err","console","log","updateTo","inward","outward","id","date","inwardNo","nature","recievedFrom","subject","deliverTo","remark","serialNo","receiptNo","addressee","description","department","from_post","body","JSON","stringify","inwardID","status","SUCCESS","getDisplayData","updated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,oBAAxC;AAGA,OAAO,MAAMC,OAAO,GAAI,MAAM;AAC1B,MAAI;AACA,UAAMC,SAAS,GAAIJ,KAAK,CAACK,IAAN,CAAWJ,eAAX,EAA4BC,MAA5B,EAClBI,IADkB,CACZC,GAAD,IAAS;AACX;AACA;AACA,aAAOA,GAAG,CAACC,IAAJ,CAASC,GAAhB;AACH,KALkB,CAAnB;AAOA,WAAOL,SAAP;AAEH,GAVD,CAUE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAnC;AACH;AACJ,CAdM,C,CAgBP;;AAEA,OAAO,MAAMG,QAAQ,GAAG,cAoBI;AAAA,MApBG;AAE3BC,IAAAA,MAAM,GAAG,IAFkB;AAG3BC,IAAAA,OAAO,GAAG,IAHiB;AAK3BC,IAAAA,EAAE,GAAG,IALsB;AAO3BC,IAAAA,IAAI,GAAG,IAPoB;AAS3BC,IAAAA,QAAQ,GAAG,IATgB;AAU3BC,IAAAA,MAAM,GAAG,IAVkB;AAW3BC,IAAAA,YAAY,GAAG,IAXY;AAY3BC,IAAAA,OAAO,GAAG,IAZiB;AAa3BC,IAAAA,SAAS,GAAG,IAbe;AAc3BC,IAAAA,MAAM,GAAG,IAdkB;AAgB3BC,IAAAA,QAAQ,GAAG,IAhBgB;AAiB3BC,IAAAA,SAAS,GAAG,IAjBe;AAkB3BC,IAAAA,SAAS,GAAG,IAlBe;AAmB3BC,IAAAA,WAAW,GAAG,IAnBa;AAoB3BC,IAAAA,UAAU,GAAG;AApBc,GAoBH;;AAExB;AAEA,MAAId,MAAJ,EAAY;AACR,UAAMe,SAAS,GAAG,aAAlB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AAEA,UAAMc,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,MAAAA,QAAQ,EAAEjB,EADc;AAExBE,MAAAA,QAAQ,EAAEA,QAFc;AAGxBD,MAAAA,IAAI,EAAEA,IAHkB;AAIxBY,MAAAA,SAAS,EAAEA,SAJa;AAKxBV,MAAAA,MAAM,EAAEA,MALgB;AAMxBC,MAAAA,YAAY,EAAEA,YANU;AAOxBC,MAAAA,OAAO,EAAEA,OAPe;AAQxBC,MAAAA,SAAS,EAAEA,SARa;AASxBC,MAAAA,MAAM,EAAEA;AATgB,KAAf,CAAb;;AAYA,QAAI;AACA,YAAMvB,KAAK,CAACK,IAAN,CAAW,qCAAX,EAAkDyB,IAAlD,EAAwD5B,MAAxD,EACDI,IADC,CACKC,GAAD,IAAS;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACA,YAAID,GAAG,CAACC,IAAJ,CAAS0B,MAAT,KAAoBC,OAAxB,EAAiCC,cAAc,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAd;AACpC,OAJC,CAAN;AAKH,KAND,CAOA,OAAO3B,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;AAGJ,CArDM,C,CAwDP;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from 'axios';\r\nimport { NEWS_SELECT_URL, CONFIG } from '../utils/constants';\r\n\r\n\r\nexport const getNews =  () => {\r\n    try {\r\n        const newsTable =  axios.post(NEWS_SELECT_URL, CONFIG)\r\n        .then((res) => {\r\n            // console.log('client side news action')\r\n            // console.log(res.data.row);\r\n            return res.data.row;\r\n        })\r\n\r\n        return newsTable;\r\n      \r\n    } catch (err) {\r\n        console.log(\"error client side \" + err);\r\n    }\r\n}\r\n\r\n// ----------------- Update Row handler -----------------\r\n\r\nexport const updateTo = async ({\r\n\r\n    inward = null,\r\n    outward = null,\r\n\r\n    id = null,\r\n\r\n    date = null,\r\n\r\n    inwardNo = null,\r\n    nature = null,\r\n    recievedFrom = null,\r\n    subject = null,\r\n    deliverTo = null,\r\n    remark = null,\r\n\r\n    serialNo = null,\r\n    receiptNo = null,\r\n    addressee = null,\r\n    description = null,\r\n    department = null }) => {\r\n\r\n    // ----------------- update Inward row -----------------\r\n\r\n    if (inward) {\r\n        const from_post = \"inward_post\";\r\n        console.log(id)\r\n\r\n        const body = JSON.stringify({\r\n            inwardID: id,\r\n            inwardNo: inwardNo,\r\n            date: date,\r\n            from_post: from_post,\r\n            nature: nature,\r\n            recievedFrom: recievedFrom,\r\n            subject: subject,\r\n            deliverTo: deliverTo,\r\n            remark: remark\r\n        });\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/inward/update', body, CONFIG)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status === SUCCESS) getDisplayData({ updated: true });\r\n                })\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n// ----------------- delete handler -----------------\r\n\r\n// export const delete_from = async ({ rowID, inward = false, outward = false }) => {\r\n\r\n//     // only one of two options must be specified.\r\n\r\n//     if (inward && outward) {\r\n//         // alert function usage error\r\n//         return;\r\n//     }\r\n\r\n//     // ----------------- delete inward -----------------\r\n\r\n//     if (inward) {\r\n//         console.log(rowID)\r\n\r\n//         const body = JSON.stringify({\r\n//             from: 'inward',\r\n//             id: rowID\r\n//         });\r\n\r\n//         try {\r\n//             console.log(body);\r\n//             await axios.post('http://localhost:5000/delete', body, CONFIG)\r\n//                 .then((res) => {\r\n//                     console.log(res.data);\r\n//                     if (res.data.status === 'success') {\r\n//                         console.log('hy im delete in inward !');\r\n//                         getDisplayData({ updated: true });\r\n//                     }\r\n//                 })\r\n\r\n\r\n//             // delete successful alert msg.\r\n//         }\r\n//         catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n//     // ----------------- delete outward -----------------\r\n\r\n//     if (outward) {\r\n\r\n//         const body = JSON.stringify({\r\n//             from: 'outward',\r\n//             id: rowID\r\n//         });\r\n\r\n//         try {\r\n//             console.log(body);\r\n//             await axios.post('http://localhost:5000/delete', body, CONFIG)\r\n//                 .then((res) => {\r\n//                     console.log(res.data);\r\n//                     if (res.data.status === 'success') getDisplayData({ updated: true });\r\n//                 })\r\n\r\n//             // delete successful alert msg.\r\n//         }\r\n//         catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//     }\r\n\r\n// }"]},"metadata":{},"sourceType":"module"}
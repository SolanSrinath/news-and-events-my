{"ast":null,"code":"import axios from 'axios';\nimport { NEWS_SELECT_URL, CONFIG, SUCCESS, NEWS_EDIT_URL } from '../utils/constants';\nexport const getNews = () => {\n  try {\n    const newsTable = axios.post(NEWS_SELECT_URL, CONFIG).then(res => {\n      // console.log('client side news action')\n      // console.log(res.data.row);\n      return res.data.row;\n    });\n    return newsTable;\n  } catch (err) {\n    console.log(\"error client side \" + err);\n  }\n}; // ----------------- Update Row handler -----------------\n\nexport const update = async _ref => {\n  let {\n    id,\n    title,\n    type,\n    news\n  } = _ref;\n  console.log(' Edit news ');\n  const body = JSON.stringify({\n    id: id,\n    title: title,\n    type: type,\n    news: news\n  });\n  console.log(body);\n\n  try {\n    await axios.post(NEWS_EDIT_URL, body, CONFIG).then(res => {\n      console.log(res.data);\n      if (res.data.status === SUCCESS) ;\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}; // ----------------- Retrive specific row handler -----------------\n\nexport const getRow = _ref2 => {\n  let {\n    id\n  } = _ref2;\n  const body = JSON.stringify({\n    id: id\n  });\n\n  try {\n    const row = axios.post('http://localhost:5000/select/row', body, CONFIG).then(res => {\n      // console.log(res.data.selectRow);\n      console.log('single row retrived successful'); // sessionStorage.setItem('selectRow', JSON.stringify({rowData : res.data.selectRow }));\n      // Next()\n\n      return res.data.selectRow;\n    }); // .then((res) => {\n    // console.log(res.data);\n    // store.dispatch(setRowData());\n    // return res.data.selectRow;\n    // } );\n\n    return row;\n  } catch (err) {\n    console.log(err);\n    return 'error';\n  }\n}; // ----------------- delete handler -----------------\n\nexport const delete_from = async _ref3 => {\n  let {\n    id\n  } = _ref3;\n  console.log(id);\n  const body = JSON.stringify({\n    id: id\n  });\n\n  try {\n    console.log(body);\n    await axios.post('http://localhost:5000/delete', body, CONFIG).then(res => {\n      console.log(res.data);\n\n      if (res.data.status === 'success') {\n        console.log('hy im delete in inward !');\n        getDisplayData({\n          updated: true\n        });\n      }\n    }); // delete successful alert msg.\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/actions/newsAction.js"],"names":["axios","NEWS_SELECT_URL","CONFIG","SUCCESS","NEWS_EDIT_URL","getNews","newsTable","post","then","res","data","row","err","console","log","update","id","title","type","news","body","JSON","stringify","status","getRow","selectRow","delete_from","getDisplayData","updated"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { NEWS_SELECT_URL, CONFIG, SUCCESS, NEWS_EDIT_URL } from '../utils/constants';\r\n\r\n\r\nexport const getNews = () => {\r\n    try {\r\n        const newsTable = axios.post(NEWS_SELECT_URL, CONFIG)\r\n            .then((res) => {\r\n                // console.log('client side news action')\r\n                // console.log(res.data.row);\r\n                return res.data.row;\r\n            })\r\n\r\n        return newsTable;\r\n\r\n    } catch (err) {\r\n        console.log(\"error client side \" + err);\r\n    }\r\n}\r\n\r\n// ----------------- Update Row handler -----------------\r\n\r\nexport const update = async ({ id, title, type, news }) => {\r\n\r\n    console.log(' Edit news ');\r\n    \r\n\r\n    const body = JSON.stringify({\r\n        id: id,\r\n        title: title,\r\n        type: type,\r\n        news: news\r\n    });\r\n\r\n    console.log(body);\r\n\r\n    try {\r\n        await axios.post(NEWS_EDIT_URL, body, CONFIG)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.status === SUCCESS) ;\r\n            })\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n}\r\n\r\n// ----------------- Retrive specific row handler -----------------\r\n\r\nexport const getRow = ({ id }) => {\r\n\r\n        const body = JSON.stringify({\r\n            id: id\r\n        })\r\n        try {\r\n            const row = axios.post('http://localhost:5000/select/row', body, CONFIG)\r\n                .then((res) => {\r\n                    // console.log(res.data.selectRow);\r\n                    console.log('single row retrived successful')\r\n                    // sessionStorage.setItem('selectRow', JSON.stringify({rowData : res.data.selectRow }));\r\n                    // Next()\r\n                    return res.data.selectRow;\r\n                })\r\n                // .then((res) => {\r\n                    // console.log(res.data);\r\n                    // store.dispatch(setRowData());\r\n                    // return res.data.selectRow;\r\n                // } );\r\n            return row;\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            return 'error';\r\n        }\r\n}\r\n\r\n\r\n\r\n// ----------------- delete handler -----------------\r\n\r\nexport const delete_from = async ({ id }) => {\r\n    \r\n        console.log(id)\r\n\r\n        const body = JSON.stringify({ id: id });\r\n\r\n        try {\r\n            console.log(body);\r\n            await axios.post('http://localhost:5000/delete', body, CONFIG)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data.status === 'success') {\r\n                        console.log('hy im delete in inward !');\r\n                        getDisplayData({ updated: true });\r\n                    }\r\n                })\r\n\r\n            // delete successful alert msg.\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}
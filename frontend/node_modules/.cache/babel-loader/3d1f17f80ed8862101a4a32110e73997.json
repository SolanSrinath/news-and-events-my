{"ast":null,"code":"var _jsxFileName = \"E:\\\\react project\\\\news_events-my\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { insertFrom, updateTo } from '../../actions/posts/postsAction';\n\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\"; // import { useNavigate, useParams } from 'react-router-dom';\n// import { getRow } from \"../../actions/posts/postsAction\";\n// import GoBackNavBar from '../navBar/GoBackNavBar';\n\nimport Header from '../../components/header/Header';\nimport Footer from '../../components/footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  // const navigate = useNavigate();\n  // ---- get inwardID ----\n  // const { id } = useParams();\n  // console.log(id)\n  const [formData, setFormData] = useState({\n    inwardNo: '',\n    date: '',\n    nature: '',\n    recievedFrom: '',\n    subject: '',\n    deliverTo: '',\n    remark: ''\n  }); // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\n  // ---- useEffect to render only once , empty '[]' makes it happn. ----\n  // useEffect(() => {\n  //     // window.location.reload();\n  //     if (id) {\n  //         var res = getRow({ inward: true, id: id });\n  //         console.log(res);\n  //         res.then((value) => {\n  //             console.log(value[0]);\n  //             setFormData(value[0]);\n  //         })\n  //     }\n  // }, []);\n\n  const handleChange = change => {\n    setFormData({ ...formData,\n      [change.target.name]: change.target.value\n    });\n    console.log(formData);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // const inward = true;\n    // const { inwardNo, date, nature, recievedFrom, subject, deliverTo, remark } = formData;\n    // if (!id) insertFrom({ inward, inwardNo, date, nature, recievedFrom, subject, deliverTo, remark });\n    // if (id) updateTo({ id, inward, inwardNo, date, nature, recievedFrom, subject, deliverTo, remark });\n    // navigate(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: s => onSubmit(s),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"Title : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                placeholder: \"title\",\n                name: \"title\" // value={formData.inwardNo}\n                ,\n                onChange: value => handleChange(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"Department : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"department\",\n                className: \"dropdown-border\",\n                id: \"dropdown\",\n                onChange: val => {\n                  handleChange(val);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  selected: \"selected\",\n                  children: formData.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  vlaue: \"\",\n                  children: \"sports\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  vlaue: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"News : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"textarea\",\n                placeholder: \"\",\n                name: \"news\" // value={formData.nature}\n                ,\n                onChange: value => handleChange(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: {\n              span: 3,\n              offset: 4\n            },\n            md: {\n              span: 4,\n              offset: 4\n            },\n            sm: {\n              span: 5,\n              offset: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-4\",\n              type: \"submit\",\n              variant: \"success\",\n              children: \"Save Inward Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"xwmb4UHgLhwiIWcTuI8TSeTwKB8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/pages/Dashboard/Form.js"],"names":["React","useEffect","useState","Button","Col","Container","Form","FormControl","InputGroup","Row","Header","Footer","Dashboard","formData","setFormData","inwardNo","date","nature","recievedFrom","subject","deliverTo","remark","handleChange","change","target","name","value","console","log","onSubmit","e","preventDefault","s","val","department","span","offset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { insertFrom, updateTo } from '../../actions/posts/postsAction';\r\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import { getRow } from \"../../actions/posts/postsAction\";\r\n// import GoBackNavBar from '../navBar/GoBackNavBar';\r\nimport Header from '../../components/header/Header';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nconst Dashboard = () => {\r\n\r\n    // const navigate = useNavigate();\r\n\r\n    // ---- get inwardID ----\r\n    // const { id } = useParams();\r\n    // console.log(id)\r\n\r\n    const [formData, setFormData] = useState({\r\n        inwardNo: '',\r\n        date: '',\r\n        nature: '',\r\n        recievedFrom: '',\r\n        subject: '',\r\n        deliverTo: '',\r\n        remark: '',\r\n    });\r\n\r\n    // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\r\n    // ---- useEffect to render only once , empty '[]' makes it happn. ----\r\n    // useEffect(() => {\r\n    //     // window.location.reload();\r\n    //     if (id) {\r\n    //         var res = getRow({ inward: true, id: id });\r\n    //         console.log(res);\r\n    //         res.then((value) => {\r\n    //             console.log(value[0]);\r\n    //             setFormData(value[0]);\r\n    //         })\r\n    //     }\r\n    // }, []);\r\n\r\n    const handleChange = (change) => {\r\n        setFormData({ ...formData, [change.target.name]: change.target.value });\r\n        console.log(formData);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // const inward = true;\r\n        // const { inwardNo, date, nature, recievedFrom, subject, deliverTo, remark } = formData;\r\n        // if (!id) insertFrom({ inward, inwardNo, date, nature, recievedFrom, subject, deliverTo, remark });\r\n        // if (id) updateTo({ id, inward, inwardNo, date, nature, recievedFrom, subject, deliverTo, remark });\r\n        // navigate(-1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <GoBackNavBar title={'New Inward Record'} /> */}\r\n            <Header />\r\n            <Form onSubmit={(s) => onSubmit(s)}>\r\n                <Container >\r\n                    <Row className='pt-5'>\r\n                        <Col >\r\n                        {/* -------- Title  -------- */}\r\n                            <InputGroup className=\"mb-3 mt-4\" >\r\n                                <InputGroup.Text >Title : </InputGroup.Text>\r\n                                <FormControl\r\n                                    type='text'\r\n                                    placeholder=\"title\"\r\n                                    name='title'\r\n                                    // value={formData.inwardNo}\r\n                                    onChange={(value) => handleChange(value)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col >\r\n                        {/* -------- Type -------- */}\r\n                        <InputGroup className=\"mb-3 mt-4\" >\r\n                                <InputGroup.Text >Department : </InputGroup.Text>\r\n                                { \r\n                                    <select name='department' className='dropdown-border' id='dropdown' onChange={(val) => { handleChange(val) }}>\r\n                                        <option value='' selected=\"selected\" >{formData.department}</option>\r\n                                        <option vlaue=''>sports</option>\r\n                                        <option vlaue=''></option>\r\n                                        {/* {departmentList.map((obj, index) => {\r\n                                            return (\r\n                                                <option >{obj.name}</option>\r\n                                            )\r\n                                        })\r\n                                        } */}\r\n                                    </select>\r\n                                }\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Col xs={12} sm={12} md={12} lg={4}>\r\n                            {/* -------- News  -------- */}\r\n                            <InputGroup className=\"mb-3 mt-4\" >\r\n                                <InputGroup.Text >News : </InputGroup.Text>\r\n                                <FormControl\r\n                                    type='textarea'\r\n                                    placeholder=\"\"\r\n                                    name='news'\r\n                                    // value={formData.nature}\r\n                                    onChange={(value) => handleChange(value)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Col>\r\n                        \r\n\r\n                    </Row>\r\n                    <Row >\r\n                        {/* -------- Form control Buttons -------- */}\r\n                        <Col lg={{ span: 3, offset: 4 }} md={{ span: 4, offset: 4 }} sm={{ span: 5, offset: 4 }} >\r\n                            { <Button className='m-4' type='submit' variant=\"success\" >Save Inward Post</Button>}\r\n                            {/* {id && <Button className='m-4' type='submit' variant=\"success\" >Update Inward Post</Button>} */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
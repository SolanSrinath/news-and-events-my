{"ast":null,"code":"var _jsxFileName = \"E:\\\\react project\\\\news_events-my\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { insertFrom, updateTo } from '../../actions/posts/postsAction';\n\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\"; // import { useNavigate, useParams } from 'react-router-dom';\n// import { getRow } from \"../../actions/posts/postsAction\";\n// import GoBackNavBar from '../navBar/GoBackNavBar';\n\nimport Header from '../../components/header/Header';\nimport Footer from '../../components/footer/Footer';\nimport { NEWS_URL, CONFIG } from '../../utils/constants';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { getRow } from '../../actions/newsAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    type: \"\",\n    news: \"\"\n  });\n  const [rowVal, setRowVal] = useState([]);\n  useEffect(() => {\n    const row = getRow(id);\n    row.then(res => {\n      console.log(res);\n      setRowVal(res);\n    });\n  });\n  const navigate = useNavigate();\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  }; // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\n  // ---- useEffect to render only once , empty '[]' makes it happn. ----\n  // useEffect(() => {\n  //     // window.location.reload();\n  //     if (id) {\n  //         var res = getRow({ inward: true, id: id });\n  //         console.log(res);\n  //         res.then((value) => {\n  //             console.log(value[0]);\n  //             setFormData(value[0]);\n  //         })\n  //     }\n  // }, []);\n  // const handleChange = (change) => {\n  //     setFormData({ ...formData, [change.target.name]: change.target.value });\n  //     console.log(formData);\n  // }\n\n\n  const handleSubmit = event => {\n    console.log(inputs);\n\n    if (event) {\n      event.preventDefault();\n      const body = JSON.stringify({\n        title: inputs.title,\n        type: inputs.type,\n        news: inputs.news\n      });\n\n      try {\n        axios.post(NEWS_URL, body, CONFIG).then(res => {\n          console.log('client side news');\n          console.log(res.data);\n\n          if (res.data.status === 'success') {\n            console.log('submitted successful');\n            alert(\"insert successful \");\n          } else {\n            console.log('failed');\n            alert(\"failed\");\n          }\n        });\n      } catch (err) {\n        console.log(\"error client side \" + err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-5\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"Title : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"text\",\n              placeholder: \"title\",\n              name: \"title\" // value={inputs.title}\n              ,\n              onChange: value => handleInputChange(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"News Type : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              className: \"dropdown-border\",\n              id: \"dropdown\",\n              onChange: val => {\n                handleInputChange(val);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"News\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"Technology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"News : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"news\",\n                value: inputs.news,\n                onChange: value => handleInputChange(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: {\n              span: 3,\n              offset: 4\n            },\n            md: {\n              span: 4,\n              offset: 4\n            },\n            sm: {\n              span: 5,\n              offset: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-4\",\n              type: \"submit\",\n              variant: \"success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"H016mGOzynjwg3zw/+TxSMBq1UE=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/pages/Dashboard/Form.js"],"names":["React","useEffect","useState","Button","Col","Container","Form","FormControl","InputGroup","Row","Header","Footer","NEWS_URL","CONFIG","useNavigate","useParams","axios","getRow","Dashboard","id","inputs","setInputs","title","type","news","rowVal","setRowVal","row","then","res","console","log","navigate","handleInputChange","event","persist","target","name","value","handleSubmit","preventDefault","body","JSON","stringify","post","data","status","alert","err","e","val","span","offset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { insertFrom, updateTo } from '../../actions/posts/postsAction';\r\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import { getRow } from \"../../actions/posts/postsAction\";\r\n// import GoBackNavBar from '../navBar/GoBackNavBar';\r\nimport Header from '../../components/header/Header';\r\nimport Footer from '../../components/footer/Footer';\r\nimport { NEWS_URL, CONFIG } from '../../utils/constants';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getRow } from '../../actions/newsAction';\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputs, setInputs] = useState({ \r\n        title: \"\", \r\n        type: \"\",\r\n        news: \"\"\r\n    });\r\n\r\n    const [rowVal, setRowVal] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const row = getRow(id);\r\n        row.then((res) => {\r\n            console.log(res);\r\n            setRowVal(res);\r\n        })\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleInputChange = (event) => {\r\n        event.persist();\r\n        setInputs((inputs) => ({\r\n            ...inputs,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n    // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\r\n    // ---- useEffect to render only once , empty '[]' makes it happn. ----\r\n    // useEffect(() => {\r\n    //     // window.location.reload();\r\n    //     if (id) {\r\n    //         var res = getRow({ inward: true, id: id });\r\n    //         console.log(res);\r\n    //         res.then((value) => {\r\n    //             console.log(value[0]);\r\n    //             setFormData(value[0]);\r\n    //         })\r\n    //     }\r\n    // }, []);\r\n\r\n\r\n\r\n    // const handleChange = (change) => {\r\n    //     setFormData({ ...formData, [change.target.name]: change.target.value });\r\n    //     console.log(formData);\r\n    // }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(inputs);\r\n        if (event) {\r\n            event.preventDefault();\r\n\r\n            const body = JSON.stringify({\r\n                title: inputs.title,\r\n                type: inputs.type,\r\n                news: inputs.news\r\n            });\r\n\r\n            try {\r\n                axios.post(NEWS_URL, body, CONFIG )\r\n                    .then((res) => {\r\n                        console.log('client side news')\r\n                        console.log(res.data);\r\n\r\n                        if (res.data.status === 'success') {\r\n                            console.log('submitted successful');\r\n                            alert(\"insert successful \");\r\n                        }\r\n                        else {\r\n                            console.log('failed');\r\n                            alert(\"failed\");\r\n                        }\r\n\r\n                    })\r\n\r\n            } catch (err) {\r\n                console.log(\"error client side \" + err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <GoBackNavBar title={'New Inward Record'} /> */}\r\n            <Header />\r\n            <Form onSubmit={(e) => handleSubmit(e)}>\r\n                <Container >\r\n                    <Row className='pt-5'>\r\n                        {/* -------- Title  -------- */}\r\n                        <InputGroup className=\"mb-3 mt-4\" >\r\n                            <InputGroup.Text >Title : </InputGroup.Text>\r\n                            <FormControl\r\n                                type='text'\r\n                                placeholder=\"title\"\r\n                                name='title'\r\n                                // value={inputs.title}\r\n                                onChange={(value) => handleInputChange(value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Row>\r\n                    <Row >\r\n                        {/* -------- Type -------- */}\r\n                        <InputGroup className=\"mb-3 mt-4\" >\r\n                            <InputGroup.Text >News Type : </InputGroup.Text>\r\n                            {\r\n                                <select name='type' className='dropdown-border' id='dropdown' onChange={(val) => { handleInputChange(val) }}>\r\n                                    <option value=''  >Select</option>\r\n                                    <option vlaue=''>Sports</option>\r\n                                    <option vlaue=''>News</option>\r\n                                    <option vlaue=''>Technology</option>\r\n\r\n                                </select>\r\n                            }\r\n                        </InputGroup>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} sm={12} md={12} lg={4}>\r\n                            {/* -------- News  -------- */}\r\n                            <InputGroup className=\"mb-3 mt-4\" >\r\n                                <InputGroup.Text >News : </InputGroup.Text>\r\n                                {/* <FormControl\r\n                                    type='textarea'\r\n                                    placeholder=\"\"\r\n                                    name='news'\r\n                                    // value={formData.nature}\r\n                                    onChange={(value) => handleInputChange(value)}\r\n                                /> */}\r\n                                <textarea name='news' value={inputs.news}  onChange={(value) => handleInputChange(value)} ></textarea>\r\n                            </InputGroup>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row >\r\n                        {/* -------- Form control Buttons -------- */}\r\n                        <Col lg={{ span: 3, offset: 4 }} md={{ span: 4, offset: 4 }} sm={{ span: 5, offset: 4 }} >\r\n                            {<Button className='m-4' type='submit' variant=\"success\" >Save</Button>}\r\n                            {/* {id && <Button className='m-4' type='submit' variant=\"success\" >Update Inward Post</Button>} */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
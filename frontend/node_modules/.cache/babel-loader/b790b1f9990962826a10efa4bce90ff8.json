{"ast":null,"code":"var _jsxFileName = \"E:\\\\react project\\\\news_events-my\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { insertFrom, updateTo } from '../../actions/posts/postsAction';\n\nimport { Button, Col, Container, Form, FormControl, InputGroup, Row } from \"react-bootstrap\"; // import { useNavigate, useParams } from 'react-router-dom';\n// import { getRow } from \"../../actions/posts/postsAction\";\n// import GoBackNavBar from '../navBar/GoBackNavBar';\n\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport { NEWS_URL, CONFIG } from \"../../utils/constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getRow, update } from \"../../actions/newsAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    type: \"select\",\n    news: \"\"\n  });\n  const navigate = useNavigate();\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  }; // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\n  // ---- useEffect to render only once , empty '[]' makes it happn. ----\n\n\n  useEffect(() => {\n    // window.location.reload();\n    if (id) {\n      var res = getRow({\n        id: id\n      });\n      console.log(res);\n      res.then(value => {\n        console.log(value[0]);\n        setInputs(value[0]);\n      });\n    }\n  }, []);\n\n  const handleSubmit = event => {\n    console.log(inputs);\n\n    if (event) {\n      event.preventDefault();\n      const obj = {\n        id: id,\n        title: inputs.title,\n        type: inputs.type,\n        news: inputs.news\n      };\n      if (!id) try {\n        const body = JSON.stringify(obj);\n        axios.post(NEWS_URL, body, CONFIG).then(res => {\n          console.log(\"client side news\");\n          console.log(res.data);\n\n          if (res.data.status === \"success\") {\n            console.log(\"submitted successful\");\n            alert(\"insert successful \");\n          } else {\n            console.log(\"failed\");\n            alert(\"failed\");\n          }\n        });\n      } catch (err) {\n        console.log(\"error client side \" + err);\n      }\n\n      if (id) {\n        update(obj);\n        navigate(`/dashboard`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-5\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"Title : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"text\",\n              placeholder: \"title\",\n              name: \"title\",\n              value: inputs.title,\n              onChange: value => handleInputChange(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n              children: \"News Type : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"type\",\n              className: \"dropdown-border\",\n              id: \"dropdown\",\n              onChange: val => {\n                handleInputChange(val);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: inputs.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"News\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                vlaue: \"\",\n                children: \"Technology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3 mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"News : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"news\",\n                value: inputs.news,\n                onChange: value => handleInputChange(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: {\n              span: 3,\n              offset: 4\n            },\n            md: {\n              span: 4,\n              offset: 4\n            },\n            sm: {\n              span: 5,\n              offset: 4\n            },\n            children: [!id && /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-4\",\n              type: \"submit\",\n              variant: \"success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), id && /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-4\",\n              type: \"submit\",\n              variant: \"success\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"+LenT9JYWH2vIyeOCejFLLn+uMI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/pages/Dashboard/Form.js"],"names":["React","useEffect","useState","Button","Col","Container","Form","FormControl","InputGroup","Row","Header","Footer","NEWS_URL","CONFIG","useNavigate","useParams","axios","getRow","update","Dashboard","id","inputs","setInputs","title","type","news","navigate","handleInputChange","event","persist","target","name","value","res","console","log","then","handleSubmit","preventDefault","obj","body","JSON","stringify","post","data","status","alert","err","e","val","span","offset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { insertFrom, updateTo } from '../../actions/posts/postsAction';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import { getRow } from \"../../actions/posts/postsAction\";\r\n// import GoBackNavBar from '../navBar/GoBackNavBar';\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport { NEWS_URL, CONFIG } from \"../../utils/constants\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { getRow, update } from \"../../actions/newsAction\";\r\n\r\nconst Dashboard = () => {\r\n  const { id } = useParams();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    title: \"\",\r\n    type: \"select\",\r\n    news: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  // ---- 'getRow' func defined in PostsAction, fetches specific row from database ----\r\n  // ---- useEffect to render only once , empty '[]' makes it happn. ----\r\n\r\n  useEffect(() => {\r\n    // window.location.reload();\r\n    if (id) {\r\n      var res = getRow({ id: id });\r\n      console.log(res);\r\n      res.then((value) => {\r\n        console.log(value[0]);\r\n        setInputs(value[0]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(inputs);\r\n    if (event) {\r\n      event.preventDefault();\r\n\r\n      const obj = {\r\n        id: id,\r\n        title: inputs.title,\r\n        type: inputs.type,\r\n        news: inputs.news,\r\n      };\r\n\r\n      if (!id)\r\n        try {\r\n          const body = JSON.stringify(obj);\r\n          axios.post(NEWS_URL, body, CONFIG).then((res) => {\r\n            console.log(\"client side news\");\r\n            console.log(res.data);\r\n\r\n            if (res.data.status === \"success\") {\r\n              console.log(\"submitted successful\");\r\n              alert(\"insert successful \");\r\n            } else {\r\n              console.log(\"failed\");\r\n              alert(\"failed\");\r\n            }\r\n          });\r\n        } catch (err) {\r\n          console.log(\"error client side \" + err);\r\n        }\r\n\r\n      if (id) {\r\n        update(obj);\r\n        navigate(`/dashboard`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <GoBackNavBar title={'New Inward Record'} /> */}\r\n      <Header />\r\n      <Form onSubmit={(e) => handleSubmit(e)}>\r\n        <Container>\r\n          <Row className=\"pt-5\">\r\n            {/* -------- Title  -------- */}\r\n            <InputGroup className=\"mb-3 mt-4\">\r\n              <InputGroup.Text>Title : </InputGroup.Text>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                name=\"title\"\r\n                value={inputs.title}\r\n                onChange={(value) => handleInputChange(value)}\r\n              />\r\n            </InputGroup>\r\n          </Row>\r\n          <Row>\r\n            {/* -------- Type -------- */}\r\n            <InputGroup className=\"mb-3 mt-4\">\r\n              <InputGroup.Text>News Type : </InputGroup.Text>\r\n              {\r\n                <select\r\n                  name=\"type\"\r\n                  className=\"dropdown-border\"\r\n                  id=\"dropdown\"\r\n                  onChange={(val) => {\r\n                    handleInputChange(val);\r\n                  }}\r\n                >\r\n                  <option value=\"\">{inputs.type}</option>\r\n                  <option vlaue=\"\">Sports</option>\r\n                  <option vlaue=\"\">News</option>\r\n                  <option vlaue=\"\">Technology</option>\r\n                </select>\r\n              }\r\n            </InputGroup>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12} sm={12} md={12} lg={4}>\r\n              {/* -------- News  -------- */}\r\n              <InputGroup className=\"mb-3 mt-4\">\r\n                <InputGroup.Text>News : </InputGroup.Text>\r\n                {/* <FormControl\r\n                                    type='textarea'\r\n                                    placeholder=\"\"\r\n                                    name='news'\r\n                                    // value={formData.nature}\r\n                                    onChange={(value) => handleInputChange(value)}\r\n                                /> */}\r\n                <textarea\r\n                  name=\"news\"\r\n                  value={inputs.news}\r\n                  onChange={(value) => handleInputChange(value)}\r\n                ></textarea>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {/* -------- Form control Buttons -------- */}\r\n            <Col\r\n              lg={{ span: 3, offset: 4 }}\r\n              md={{ span: 4, offset: 4 }}\r\n              sm={{ span: 5, offset: 4 }}\r\n            >\r\n              {!id && (\r\n                <Button className=\"m-4\" type=\"submit\" variant=\"success\">\r\n                  Save\r\n                </Button>\r\n              )}\r\n              {id && (\r\n                <Button className=\"m-4\" type=\"submit\" variant=\"success\">\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { logIn, userConfig } from './authSlice';\nimport store from '../../store';\nimport bcryptjs from 'bcryptjs';\nimport { CONFIG, LOGIN_URL } from '../utils/constants';\n\nconst hashPass = password => {\n  const salt = bcryptjs.genSaltSync(5);\n  const passHash = bcryptjs.hashSync(password, 0);\n  return passHash;\n};\n\nexport const loginAction = async _ref => {\n  let {\n    username,\n    password,\n    setAuth\n  } = _ref;\n  // const passHash = hashPass(password);\n  const body = JSON.stringify({\n    'username': username,\n    'password': password\n  });\n\n  try {\n    const res = await axios.post(LOGIN_URL, body, CONFIG);\n    console.log(\"res : \" + res.data.password);\n\n    if (await bcryptjs.compareSync(password, res.data.password)) {\n      store.dispatch(logIn());\n      store.dispatch(userConfig({\n        'username': username\n      }));\n    } else {// alert should trigger here\n    }\n  } catch (err) {\n    console.log(\"error client side \" + err);\n  }\n};","map":{"version":3,"sources":["E:/react project/news_events-my/frontend/src/components/actions/authAction.js"],"names":["axios","logIn","userConfig","store","bcryptjs","CONFIG","LOGIN_URL","hashPass","password","salt","genSaltSync","passHash","hashSync","loginAction","username","setAuth","body","JSON","stringify","res","post","console","log","data","compareSync","dispatch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,aAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;;AAGA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3B,QAAMC,IAAI,GAAGL,QAAQ,CAACM,WAAT,CAAqB,CAArB,CAAb;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACQ,QAAT,CAAkBJ,QAAlB,EAA4B,CAA5B,CAAjB;AACA,SAAOG,QAAP;AACH,CAJD;;AAMA,OAAO,MAAME,WAAW,GAAG,cAA2C;AAAA,MAApC;AAAEC,IAAAA,QAAF;AAAYN,IAAAA,QAAZ;AAAsBO,IAAAA;AAAtB,GAAoC;AAClE;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxB,gBAAYJ,QADY;AAExB,gBAAYN;AAFY,GAAf,CAAb;;AAKA,MAAI;AACA,UAAMW,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAWd,SAAX,EAAsBU,IAAtB,EAA4BX,MAA5B,CAAlB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,GAAG,CAACI,IAAJ,CAASf,QAAhC;;AACA,QAAI,MAAMJ,QAAQ,CAACoB,WAAT,CAAqBhB,QAArB,EAA+BW,GAAG,CAACI,IAAJ,CAASf,QAAxC,CAAV,EAA6D;AACzDL,MAAAA,KAAK,CAACsB,QAAN,CAAexB,KAAK,EAApB;AACAE,MAAAA,KAAK,CAACsB,QAAN,CAAevB,UAAU,CAAC;AAAE,oBAAYY;AAAd,OAAD,CAAzB;AACH,KAHD,MAIK,CACD;AAEH;AACJ,GAXD,CAWE,OAAOY,GAAP,EAAY;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBI,GAAnC;AACH;AACJ,CArBM","sourcesContent":["import axios from 'axios';\r\nimport { logIn, userConfig } from './authSlice';\r\nimport store from '../../store';\r\nimport bcryptjs from 'bcryptjs';\r\nimport { CONFIG, LOGIN_URL } from '../utils/constants';\r\n\r\n\r\nconst hashPass = (password) => {\r\n    const salt = bcryptjs.genSaltSync(5);\r\n    const passHash = bcryptjs.hashSync(password, 0);\r\n    return passHash;\r\n}\r\n\r\nexport const loginAction = async ({ username, password, setAuth }) => {\r\n    // const passHash = hashPass(password);\r\n    const body = JSON.stringify({\r\n        'username': username,\r\n        'password': password\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(LOGIN_URL, body, CONFIG);\r\n        console.log(\"res : \" + res.data.password);\r\n        if (await bcryptjs.compareSync(password, res.data.password)) {\r\n            store.dispatch(logIn());\r\n            store.dispatch(userConfig({ 'username': username }));\r\n        }\r\n        else {\r\n            // alert should trigger here\r\n            \r\n        }\r\n    } catch (err) {\r\n        console.log(\"error client side \" + err);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}